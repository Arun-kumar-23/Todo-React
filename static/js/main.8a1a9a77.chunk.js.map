{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","el","filter","TodoList","filterTodos","App","useState","status","setFilterTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAkCeA,EAhCF,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,aAAcC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,UAerD,OACI,iCACA,uBAAOC,MAAOF,EAAWG,SAhBJ,SAACC,GACtBP,EAAaO,EAAEC,OAAOH,QAe+BI,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAdU,SAACJ,GACvBA,EAAEK,iBACFV,EAAS,GAAD,mBACDD,GADC,CACM,CAACY,KAAKV,EAAWW,WAAU,EAAOC,GAAkB,IAAdC,KAAKC,aAEzDjB,EAAa,KAS2BU,UAAU,cAAcD,KAAK,SAAjE,SACE,mBAAGC,UAAU,yBAEf,qBAAKA,UAAU,SAAf,SACE,yBAAQJ,SAVI,SAACC,GACnBH,EAAUG,EAAEC,OAAOH,QASoBa,KAAK,QAAQR,UAAU,cAAxD,UACE,wBAAQL,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCAGc,EAzBF,SAAC,GAAoC,IAAnCN,EAAkC,EAAlCA,KAAOO,EAA2B,EAA3BA,KAAMnB,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAgB/B,OACI,sBAAKQ,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeU,EAAKN,UAAY,YAAc,IAA3D,SAAmED,IACnE,wBAAQF,QAbI,WACpBT,EAASD,EAAMoB,KAAI,SAACC,GAChB,OAAGA,EAAGP,KAAOK,EAAKL,GACd,2BACOO,GADP,IACWR,WAAYQ,EAAGR,YAGvBQ,OAM+BZ,UAAU,eAA5C,SAA2D,mBAAGA,UAAU,mBACxE,wBAAQC,QAlBC,WACjBT,EAASD,EAAMsB,QAAO,SAACD,GAAD,OAAOA,EAAGP,KAAOK,EAAKL,QAiBLL,UAAU,YAAzC,SAAqD,mBAAGA,UAAU,uBCD/Dc,EAlBE,SAAC,GAAoC,IAAnCvB,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUuB,EAAiB,EAAjBA,YAChC,OACI,qBAAKf,UAAU,iBAAf,SACA,oBAAIA,UAAU,YAAd,SACCe,EAAYJ,KAAI,SAAAD,GAAI,OACrB,cAAC,EAAD,CACInB,MAAOA,EACPC,SAAUA,EAEVkB,KAAQA,EACRP,KAAMO,EAAKP,MAFNO,EAAKL,YC6CPW,MAnDf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOxB,EAAP,KAAkBH,EAAlB,KACA,EAA0B2B,mBAAS,IAAnC,mBAAO1B,EAAP,KAAcC,EAAd,KACA,EAA4ByB,mBAAS,OAArC,mBAAOC,EAAP,KAAexB,EAAf,KACA,EAAsCuB,mBAAS,IAA/C,mBAAOF,EAAP,KAAoBI,EAApB,KAEAC,qBAAW,WACTC,MACA,IAEHD,qBAAU,WACRE,IACAC,MACA,CAAChC,EAAO2B,IAET,IAAMI,EAAgB,WACpB,OAAOJ,GACL,IAAK,YACHC,EAAe5B,EAAMsB,QAAO,SAACH,GAAD,OAA4B,IAAnBA,EAAKN,cAC1C,MACF,IAAK,cACLe,EAAe5B,EAAMsB,QAAO,SAACH,GAAD,OAA4B,IAAnBA,EAAKN,cAC1C,MACA,QACAe,EAAe5B,KAIbgC,EAAiB,WACnBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUpC,KAEzC8B,EAAgB,WACpB,GAAmC,OAAhCG,aAAaI,QAAQ,SACtBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SACzC,CACJ,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,UAChDpC,EAASqC,KAGf,OACE,sBAAK7B,UAAU,MAAf,UACC,iCACE,qDAGF,cAAC,EAAD,CAAMP,UAAWA,EAAWF,MAAOA,EAAOC,SAAUA,EAAUF,aAAcA,EAAcI,UAAWA,IACrG,cAAC,EAAD,CAAUqB,YAAaA,EAAaxB,MAAOA,EAAOC,SAAUA,QCvClDuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8a1a9a77.chunk.js","sourcesContent":["import React from 'react'\n\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\n    const inputTextHandler = (e)=>{\n        setInputText(e.target.value)\n    }\nconst submitTodoHandler = (e)=>{\n    e.preventDefault()\n    setTodos([\n        ...todos, {text:inputText, completed:false, id: Math.random()*1000}\n    ])\n    setInputText(\"\")\n}\n\nconst statusHandler = (e) =>{\n    setStatus(e.target.value)\n}\n    return (\n        <form>\n        <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n          <i className=\"fas fa-plus-square\"></i>\n        </button>\n        <div className=\"select\">\n          <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"uncompleted\">Uncompleted</option>\n          </select>\n        </div>\n      </form>\n    )\n}\n\nexport default Form","import React from 'react'\n\nconst Todo = ({text,  todo, todos, setTodos}) => {\n\nconst deletHandler = ()=>{\n    setTodos(todos.filter((el)=> el.id !== todo.id))\n}\n\nconst completeHandler = () =>{\n    setTodos(todos.map((el)=>{\n        if(el.id === todo.id){\n            return{\n                ...el, completed: !el.completed\n            }\n        }\n        return el\n    }))\n}\n    return (\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}` }>{text}</li>\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\n            <button onClick={deletHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\n        </div>\n    )\n}\n\nexport default Todo\n","import React from 'react'\nimport Todo from './Todo'\n\nconst TodoList = ({todos, setTodos, filterTodos}) => {\n    return (\n        <div className=\"todo-container\">\n        <ul className=\"todo-list\">\n        {filterTodos.map(todo =>(\n        <Todo \n            todos={todos} \n            setTodos={setTodos} \n            key={todo.id} \n            todo = {todo}\n            text={todo.text}/>\n        ))}\n        </ul>\n       \n      </div>\n    )\n}\n\nexport default TodoList\n","import React, {useState, useEffect} from 'react'\nimport './App.css';\nimport Form from './components/Form'\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\")\n  const [todos, setTodos] = useState([])\n  const [status, setStatus] = useState(\"all\")\n  const [filterTodos, setFilterTodos] = useState([])\n\n  useEffect (()=>{\n    getLocalTodos()\n  },[])\n\n useEffect(()=>{\n   filterHandler()\n   saveLocalTodos()\n },[todos, status]) \n\n  const filterHandler = ()=>{\n    switch(status){\n      case \"completed\":\n        setFilterTodos(todos.filter((todo)=> todo.completed === true))\n        break\n      case \"uncompleted\":\n      setFilterTodos(todos.filter((todo)=> todo.completed === false))\n      break\n      default:\n      setFilterTodos(todos)\n    }\n  }\n\n  const saveLocalTodos = () =>{\n      localStorage.setItem(\"todos\", JSON.stringify(todos))\n    }\n    const getLocalTodos = () =>{\n      if(localStorage.getItem(\"todos\")===null){\n        localStorage.setItem(\"todos\", JSON.stringify([]))\n      } else{\n        let todoLocal = JSON.parse(localStorage.getItem(\"todos\"))\n        setTodos(todoLocal)\n      }\n  }\n  return (\n    <div className=\"App\">\n     <header>\n       <h1>Arun's Todo List </h1>\n     </header>\n\n     <Form inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} setStatus={setStatus} />\n     <TodoList filterTodos={filterTodos} todos={todos} setTodos={setTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}